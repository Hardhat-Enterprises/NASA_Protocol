.\" Automatically generated by Pod::Man v1.37, Pod::Parser v1.32
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sh \" Subsection heading
.br
.if t .Sp
.ne 5
.PP
\fB\\$1\fR
.PP
..
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  | will give a
.\" real vertical bar.  \*(C+ will give a nicer C++.  Capital omega is used to
.\" do unbreakable dashes and therefore won't be available.  \*(C` and \*(C'
.\" expand to `' in nroff, nothing in troff, for use with C<>.
.tr \(*W-|\(bv\*(Tr
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
'br\}
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.Sh), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.if \nF \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
..
.    nr % 0
.    rr F
.\}
.\"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.hy 0
.if n .na
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "AMSXML 5"
.TH AMSXML 5 "2022-05-20" "perl v5.8.8" "AMS configuration files"
.SH "NAME"
amsxml \- CCSDS Asynchronous Message Service MIB initialization XML file
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
The Management Information Base (\s-1MIB\s0) for an \s-1AMS\s0 communicating entity (either
\&\fBamsd\fR or an \s-1AMS\s0 application module) must contain enough information to
enable the entity to initiate participation in \s-1AMS\s0 message exchange, such
as the network location of the configuration server and the roles and message
subjects defined for some venture.
.PP
\&\s-1AMS\s0 entities automatically load their MIBs from initialization files at
startup.  When \s-1AMS\s0 is built with the \-DNOEXPAT compiler option set, the
\&\s-1MIB\s0 initialization file must conform to the \fIamsrc\fR syntax described
in \fIamsrc\fR\|(5); otherwise the \fIexpat\fR \s-1XML\s0 parsing library must be linked into
the \s-1AMS\s0 executable and the \s-1MIB\s0 initialization file must conform to the
\&\fIamsxml\fR syntax described below.
.PP
The \s-1XML\s0 statements in the \s-1MIB\s0 initialization file constitute \fIelements\fR of
\&\s-1MIB\s0 update information, each of which may have one or more \fIattributes\fR.  An
element may also have sub-elements that are listed within the declaration of
the parent element, and so on.
.PP
Two types of elements are recognized in the \s-1MIB\s0 initialization file:
control elements and configuration elements.  A control element establishes
the update context within which the configuration elements nested within
it are processed, while a configuration element declares values for one
or more items of \s-1AMS\s0 configuration information in the \s-1MIB\s0.
.PP
For a discussion of the recognized control elements and configuration elements
of the \s-1MIB\s0 initialization file, see the \fIamsrc\fR\|(5) man page.  \fB\s-1NOTE\s0\fR, though,
that all elements of an XML-based \s-1MIB\s0 initialization file \fBmust\fR be
sub-elements of a single sub-element of the \s-1XML\s0 extension type \fBams_load_mib\fR
in order for the file to be parsed successfully by expat.
.SH "EXAMPLE"
.IX Header "EXAMPLE"
<?xml version=\*(L"1.0\*(R" standalone=\*(L"yes\*(R"?>
.PP
<ams_mib_load>
.PP
.Vb 1
\&        <ams_mib_init continuum_nbr="2" ptsname="dgr"/>
.Ve
.PP
.Vb 1
\&        <ams_mib_add>
.Ve
.PP
.Vb 1
\&                <continuum nbr="1" name="apl" desc="APL"/>
.Ve
.PP
.Vb 1
\&                <csendpoint epspec="beaumont.stepsoncats.com:2357"/>
.Ve
.PP
.Vb 1
\&                <application name="amsdemo" />
.Ve
.PP
.Vb 1
\&                <venture nbr="1" appname="amsdemo" authname="test">
.Ve
.PP
.Vb 1
\&                        <role nbr="2" name="shell"/>
.Ve
.PP
.Vb 1
\&                        <role nbr="3" name="log"/>
.Ve
.PP
.Vb 1
\&                        <role nbr="4" name="pitch"/>
.Ve
.PP
.Vb 1
\&                        <role nbr="5" name="catch"/>
.Ve
.PP
.Vb 1
\&                        <role nbr="6" name="benchs"/>
.Ve
.PP
.Vb 1
\&                        <role nbr="7" name="benchr"/>
.Ve
.PP
.Vb 1
\&                        <role nbr="96" name="amsd"/>
.Ve
.PP
.Vb 1
\&                        <role nbr="97" name="amsmib"/>
.Ve
.PP
.Vb 1
\&                        <role nbr="98" name="amsstop"/>
.Ve
.PP
.Vb 1
\&                        <subject nbr="1" name="text" desc="ASCII text"/>
.Ve
.PP
.Vb 1
\&                        <subject nbr="2" name="noise" desc="more ASCII text"/>
.Ve
.PP
.Vb 1
\&                        <subject nbr="3" name="bench" desc="numbered msgs"/>
.Ve
.PP
.Vb 1
\&                        <subject nbr="97" name="amsmib" desc="MIB updates"/>
.Ve
.PP
.Vb 1
\&                        <subject nbr="98" name="amsstop" desc="shutdown"/>
.Ve
.PP
.Vb 1
\&                        <unit nbr="1" name="orbiters"/>
.Ve
.PP
.Vb 1
\&                        <unit nbr="2" name="orbiters.near"/>
.Ve
.PP
.Vb 1
\&                        <unit nbr="3" name="orbiters.far"/>
.Ve
.PP
.Vb 1
\&                        <msgspace nbr="2"/>
.Ve
.PP
.Vb 1
\&                </venture>
.Ve
.PP
.Vb 1
\&        </ams_mib_add>
.Ve
.PP
</ams_mib_load>
.SH "SEE ALSO"
.IX Header "SEE ALSO"
\&\fIamsrc\fR\|(5)
